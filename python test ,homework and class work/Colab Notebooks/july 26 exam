{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPY5zdorD568pcVGPaTw2VB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"57T-6B2xmQvi","executionInfo":{"status":"ok","timestamp":1722007140640,"user_tz":-330,"elapsed":6,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"851b34d8-33ac-4f70-ffac-cb3cacc7227f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Nokia1: Making a call with Nokia1, Sending a text with Nokia1, Browsing internet with Nokia1\n","Nokia2: Making a call with Nokia2 with improved clarity, Sending a text with Nokia1, Browsing internet with faster speed on Nokia2, Taking photos with 5MP camera on Nokia2\n","Nokia3: Making a call with Nokia3 with noise cancellation, Sending a text with advanced text features on Nokia3, Browsing internet with faster speed on Nokia2, Taking photos with 12MP camera on Nokia3, Using GPS navigation on Nokia3\n","Nokia4: Making a call with Nokia4 with 4G support, Sending a text with advanced text features on Nokia3, Browsing internet with faster speed on Nokia2, Taking photos with 48MP camera on Nokia4, Using advanced GPS navigation with real-time traffic on Nokia4, Unlocking phone with facial recognition on Nokia4\n"]}],"source":["class Nokia1:\n","    def __init__(self):\n","        self.model = \"Nokia1\"\n","\n","    def call(self):\n","        return \"Making a call with Nokia1\"\n","\n","    def text(self):\n","        return \"Sending a text with Nokia1\"\n","\n","    def browse_internet(self):\n","        return \"Browsing internet with Nokia1\"\n","\n","    def __str__(self):\n","        return f\"Nokia1: {self.call()}, {self.text()}, {self.browse_internet()}\"\n","\n","\n","class Nokia2(Nokia1):\n","    def __init__(self):\n","        super().__init__()\n","        self.model = \"Nokia2\"\n","\n","    def call(self):\n","        return \"Making a call with Nokia2 with improved clarity\"\n","\n","    def browse_internet(self):\n","        return \"Browsing internet with faster speed on Nokia2\"\n","\n","    def camera(self):\n","        return \"Taking photos with 5MP camera on Nokia2\"\n","\n","    def __str__(self):\n","        return f\"Nokia2: {self.call()}, {self.text()}, {self.browse_internet()}, {self.camera()}\"\n","\n","\n","class Nokia3(Nokia2):\n","    def __init__(self):\n","        super().__init__()\n","        self.model = \"Nokia3\"\n","\n","    def call(self):\n","        return \"Making a call with Nokia3 with noise cancellation\"\n","\n","    def text(self):\n","        return \"Sending a text with advanced text features on Nokia3\"\n","\n","    def camera(self):\n","        return \"Taking photos with 12MP camera on Nokia3\"\n","\n","    def gps(self):\n","        return \"Using GPS navigation on Nokia3\"\n","\n","    def __str__(self):\n","        return f\"Nokia3: {self.call()}, {self.text()}, {self.browse_internet()}, {self.camera()}, {self.gps()}\"\n","\n","\n","class Nokia4(Nokia3):\n","    def __init__(self):\n","        super().__init__()\n","        self.model = \"Nokia4\"\n","\n","    def call(self):\n","        return \"Making a call with Nokia4 with 4G support\"\n","\n","    def camera(self):\n","        return \"Taking photos with 48MP camera on Nokia4\"\n","\n","    def gps(self):\n","        return \"Using advanced GPS navigation with real-time traffic on Nokia4\"\n","\n","    def facial_recognition(self):\n","        return \"Unlocking phone with facial recognition on Nokia4\"\n","\n","    def __str__(self):\n","        return f\"Nokia4: {self.call()}, {self.text()}, {self.browse_internet()}, {self.camera()}, {self.gps()}, {self.facial_recognition()}\"\n","\n","\n","# Create instances of each class and print their features\n","nokia1 = Nokia1()\n","nokia2 = Nokia2()\n","nokia3 = Nokia3()\n","nokia4 = Nokia4()\n","\n","print(nokia1)\n","print(nokia2)\n","print(nokia3)\n","print(nokia4)\n","\n"]},{"cell_type":"code","source":["class Student:\n","    def __init__(self, student_id, name, age, grade):\n","        self.student_id = student_id\n","        self.name = name\n","        self.age = age\n","        self.grade = grade\n","\n","class StudentManagementSystem:\n","    def __init__(self):\n","        self.students = {}\n","\n","    def accept_student_details(self):\n","        student_id = input(\"Enter Student ID: \")\n","        if student_id in self.students:\n","            print(\"Student ID already exists. Try updating the details instead.\")\n","            return\n","\n","        name = input(\"Enter Student Name: \")\n","        age = int(input(\"Enter Student Age: \"))\n","        grade = input(\"Enter Student Grade: \")\n","\n","        student = Student(student_id, name, age, grade)\n","        self.students[student_id] = student\n","        print(\"Student details added successfully.\")\n","\n","    def display_student_details(self):\n","        if not self.students:\n","            print(\"No student records available.\")\n","            return\n","\n","        for student in self.students.values():\n","            print(f\"ID: {student.student_id}, Name: {student.name}, Age: {student.age}, Grade: {student.grade}\")\n","\n","    def search_student_details(self):\n","        student_id = input(\"Enter Student ID to search: \")\n","        student = self.students.get(student_id)\n","        if student:\n","            print(f\"ID: {student.student_id}, Name: {student.name}, Age: {student.age}, Grade: {student.grade}\")\n","        else:\n","            print(\"Student not found.\")\n","\n","    def delete_student_details(self):\n","        student_id = input(\"Enter Student ID to delete: \")\n","        if self.students.pop(student_id, None):\n","            print(\"Student details deleted successfully.\")\n","        else:\n","            print(\"Student not found.\")\n","\n","    def update_student_details(self):\n","        student_id = input(\"Enter Student ID to update: \")\n","        student = self.students.get(student_id)\n","        if student:\n","            name = input(\"Enter new Student Name (leave blank to keep unchanged): \")\n","            if name:\n","                student.name = name\n","\n","            age_input = input(\"Enter new Student Age (leave blank to keep unchanged): \")\n","            if age_input:\n","                student.age = int(age_input)\n","\n","            grade = input(\"Enter new Student Grade (leave blank to keep unchanged): \")\n","            if grade:\n","                student.grade = grade\n","\n","            print(\"Student details updated successfully.\")\n","        else:\n","            print(\"Student not found.\")\n","\n","def main():\n","    sms = StudentManagementSystem()\n","\n","    while True:\n","        print(\"\\nStudent Management System\")\n","        print(\"1. Accept Student Details\")\n","        print(\"2. Display Student Details\")\n","        print(\"3. Search Details of a Student\")\n","        print(\"4. Delete Details of a Student\")\n","        print(\"5. Update Student Details\")\n","        print(\"6. Exit\")\n","\n","        choice = input(\"Enter your choice (1-6): \")\n","\n","        if choice == '1':\n","            sms.accept_student_details()\n","        elif choice == '2':\n","            sms.display_student_details()\n","        elif choice == '3':\n","            sms.search_student_details()\n","        elif choice == '4':\n","            sms.delete_student_details()\n","        elif choice == '5':\n","            sms.update_student_details()\n","        elif choice == '6':\n","            print(\"Exiting the system.\")\n","            break\n","        else:\n","            print(\"Invalid choice. Please select a number between 1 and 6.\")\n","\n","if __name__ == \"__main__\":\n","    main()\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ispdG9gAoArv","executionInfo":{"status":"ok","timestamp":1722008442887,"user_tz":-330,"elapsed":227134,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"7eab256c-17fc-499a-829a-fec5bd79e348"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Student Management System\n","1. Accept Student Details\n","2. Display Student Details\n","3. Search Details of a Student\n","4. Delete Details of a Student\n","5. Update Student Details\n","6. Exit\n","Enter your choice (1-6): 1\n","Enter Student ID: a\n","Enter Student Name: anu\n","Enter Student Age: 15\n","Enter Student Grade: a\n","Student details added successfully.\n","\n","Student Management System\n","1. Accept Student Details\n","2. Display Student Details\n","3. Search Details of a Student\n","4. Delete Details of a Student\n","5. Update Student Details\n","6. Exit\n","Enter your choice (1-6): 2\n","ID: a, Name: anu, Age: 15, Grade: a\n","\n","Student Management System\n","1. Accept Student Details\n","2. Display Student Details\n","3. Search Details of a Student\n","4. Delete Details of a Student\n","5. Update Student Details\n","6. Exit\n","Enter your choice (1-6): 3\n","Enter Student ID to search: b\n","Student not found.\n","\n","Student Management System\n","1. Accept Student Details\n","2. Display Student Details\n","3. Search Details of a Student\n","4. Delete Details of a Student\n","5. Update Student Details\n","6. Exit\n","Enter your choice (1-6): 4\n","Enter Student ID to delete: c\n","Student not found.\n","\n","Student Management System\n","1. Accept Student Details\n","2. Display Student Details\n","3. Search Details of a Student\n","4. Delete Details of a Student\n","5. Update Student Details\n","6. Exit\n","Enter your choice (1-6): 5\n","Enter Student ID to update: d\n","Student not found.\n","\n","Student Management System\n","1. Accept Student Details\n","2. Display Student Details\n","3. Search Details of a Student\n","4. Delete Details of a Student\n","5. Update Student Details\n","6. Exit\n","Enter your choice (1-6): 6\n","Exiting the system.\n"]}]}]}