{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN/L3jmgZoT3f+LZ3/uzq4y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"RLgm2nOXHbVn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Tmkoc = pd.read_csv('/content/TMKOC_Episode.csv')\n","Tmkoc.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"87mlCUfwJrDO","executionInfo":{"status":"ok","timestamp":1727453458475,"user_tz":-330,"elapsed":469,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"8657e129-4b65-48b9-e721-69b2eac64aa0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  episode_number  \\\n","0           0               1   \n","1           1               2   \n","2           2               3   \n","3           3               4   \n","4           4               5   \n","\n","                                       Episode_title  \\\n","0  Taarak Mehta Introduces Himself And Society Me...   \n","1   Jethalal's Son Tapu Decides To Spend His Holiday   \n","2                Tapu Has Been The Worry Of Jethalal   \n","3              Daya Approaches Taarak Mehta For Help   \n","4                           Jethalal In Huge Trouble   \n","\n","                                         description Episode_runtime  \\\n","0  Taarak Mehta introduces himself and the societ...         21 mins   \n","1  Jethalal's son Tapu decides to spend his holid...         18 mins   \n","2  More than the society members, Tapu has been t...         19 mins   \n","3  Tapu lands Jethalal Gada into yet another trou...         18 mins   \n","4  Tapu has decided to take full revenge from his...         18 mins   \n","\n","   Released_on  \n","0  28 Jul 2008  \n","1  29 Jul 2008  \n","2  30 Jul 2008  \n","3  31 Jul 2008  \n","4  01 Aug 2008  "],"text/html":["\n","  <div id=\"df-635b2fad-95ac-41d5-bec2-a041134fd49c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>episode_number</th>\n","      <th>Episode_title</th>\n","      <th>description</th>\n","      <th>Episode_runtime</th>\n","      <th>Released_on</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Taarak Mehta Introduces Himself And Society Me...</td>\n","      <td>Taarak Mehta introduces himself and the societ...</td>\n","      <td>21 mins</td>\n","      <td>28 Jul 2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Jethalal's Son Tapu Decides To Spend His Holiday</td>\n","      <td>Jethalal's son Tapu decides to spend his holid...</td>\n","      <td>18 mins</td>\n","      <td>29 Jul 2008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>Tapu Has Been The Worry Of Jethalal</td>\n","      <td>More than the society members, Tapu has been t...</td>\n","      <td>19 mins</td>\n","      <td>30 Jul 2008</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>Daya Approaches Taarak Mehta For Help</td>\n","      <td>Tapu lands Jethalal Gada into yet another trou...</td>\n","      <td>18 mins</td>\n","      <td>31 Jul 2008</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>Jethalal In Huge Trouble</td>\n","      <td>Tapu has decided to take full revenge from his...</td>\n","      <td>18 mins</td>\n","      <td>01 Aug 2008</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-635b2fad-95ac-41d5-bec2-a041134fd49c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-635b2fad-95ac-41d5-bec2-a041134fd49c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-635b2fad-95ac-41d5-bec2-a041134fd49c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3d9f84c1-3c3c-4d70-abef-44b7575a4fc1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d9f84c1-3c3c-4d70-abef-44b7575a4fc1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3d9f84c1-3c3c-4d70-abef-44b7575a4fc1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Tmkoc","summary":"{\n  \"name\": \"Tmkoc\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1182,\n        \"min\": 0,\n        \"max\": 4094,\n        \"num_unique_values\": 4095,\n        \"samples\": [\n          1298,\n          2711,\n          3543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"episode_number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1182,\n        \"min\": 1,\n        \"max\": 4100,\n        \"num_unique_values\": 4095,\n        \"samples\": [\n          1299,\n          2712,\n          3545\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Episode_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4023,\n        \"samples\": [\n          \"Popatlal Wants His Old Umbrella\",\n          \"Jethalal, Taarak and Chalu Pandey on a mission\",\n          \"Bhide Is Blamed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4091,\n        \"samples\": [\n          \"Roshan asks for Bhide's help to look for Sodhi. Then Popatlal, Iyer and Bhide go to Sodhi's party to check on him. However, when they reach there, they find that he and his friends have completely passed out. What could've happened? Find out in this episode.\",\n          \"Bhide is excited about his swing, he chooses to put it in his balcony. Looking at this, Champaklal, Jethalal, and Daya miss their good old days and share stories. Bhide faces trouble in getting the swing fixed. This gets him worked up. Watch this episode of Taarak Mehta Ka Oolta Chasma to see what happens next.\",\n          \"Bhide calls a meeting to communicate his concern about the arrangements for Ganesh Chaturthi since Tapu Sena isn't available this time. All the ladies take the responsibility for making the arrangements. Will they be able to live up to the standards set by Tapu Sena?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Episode_runtime\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          \"29 mins\",\n          \"23 mins\",\n          \"40 mins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Released_on\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 2544,\n        \"samples\": [\n          \"21 Dec 2017\",\n          \"25 Apr 2023\",\n          \"16 Mar 2022\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["from datetime import datetime\n","Tmkoc['Released_on'] = pd.to_datetime(Tmkoc['Released_on'],errors='coerce')\n","Tmkoc['Episode_runtime'] = Tmkoc['Episode_runtime'].str.extract('(\\d+)').astype(float)\n","Tmkoc.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"ysTHN3TSP_gg","executionInfo":{"status":"ok","timestamp":1727453886265,"user_tz":-330,"elapsed":472,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"821e5857-a124-4214-b065-0d9d850ead6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  episode_number  \\\n","0           0               1   \n","1           1               2   \n","2           2               3   \n","3           3               4   \n","4           4               5   \n","\n","                                       Episode_title  \\\n","0  Taarak Mehta Introduces Himself And Society Me...   \n","1   Jethalal's Son Tapu Decides To Spend His Holiday   \n","2                Tapu Has Been The Worry Of Jethalal   \n","3              Daya Approaches Taarak Mehta For Help   \n","4                           Jethalal In Huge Trouble   \n","\n","                                         description  Episode_runtime  \\\n","0  Taarak Mehta introduces himself and the societ...             21.0   \n","1  Jethalal's son Tapu decides to spend his holid...             18.0   \n","2  More than the society members, Tapu has been t...             19.0   \n","3  Tapu lands Jethalal Gada into yet another trou...             18.0   \n","4  Tapu has decided to take full revenge from his...             18.0   \n","\n","  Released_on  \n","0  2008-07-28  \n","1  2008-07-29  \n","2  2008-07-30  \n","3  2008-07-31  \n","4  2008-08-01  "],"text/html":["\n","  <div id=\"df-6275fcaa-b64e-4ae4-8ba9-c711ae127d18\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>episode_number</th>\n","      <th>Episode_title</th>\n","      <th>description</th>\n","      <th>Episode_runtime</th>\n","      <th>Released_on</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Taarak Mehta Introduces Himself And Society Me...</td>\n","      <td>Taarak Mehta introduces himself and the societ...</td>\n","      <td>21.0</td>\n","      <td>2008-07-28</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Jethalal's Son Tapu Decides To Spend His Holiday</td>\n","      <td>Jethalal's son Tapu decides to spend his holid...</td>\n","      <td>18.0</td>\n","      <td>2008-07-29</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>Tapu Has Been The Worry Of Jethalal</td>\n","      <td>More than the society members, Tapu has been t...</td>\n","      <td>19.0</td>\n","      <td>2008-07-30</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>Daya Approaches Taarak Mehta For Help</td>\n","      <td>Tapu lands Jethalal Gada into yet another trou...</td>\n","      <td>18.0</td>\n","      <td>2008-07-31</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>Jethalal In Huge Trouble</td>\n","      <td>Tapu has decided to take full revenge from his...</td>\n","      <td>18.0</td>\n","      <td>2008-08-01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6275fcaa-b64e-4ae4-8ba9-c711ae127d18')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6275fcaa-b64e-4ae4-8ba9-c711ae127d18 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6275fcaa-b64e-4ae4-8ba9-c711ae127d18');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-279b1523-5d09-4718-a99f-0e45930d109a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-279b1523-5d09-4718-a99f-0e45930d109a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-279b1523-5d09-4718-a99f-0e45930d109a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Tmkoc","summary":"{\n  \"name\": \"Tmkoc\",\n  \"rows\": 4095,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1182,\n        \"min\": 0,\n        \"max\": 4094,\n        \"num_unique_values\": 4095,\n        \"samples\": [\n          1298,\n          2711,\n          3543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"episode_number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1182,\n        \"min\": 1,\n        \"max\": 4100,\n        \"num_unique_values\": 4095,\n        \"samples\": [\n          1299,\n          2712,\n          3545\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Episode_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4023,\n        \"samples\": [\n          \"Popatlal Wants His Old Umbrella\",\n          \"Jethalal, Taarak and Chalu Pandey on a mission\",\n          \"Bhide Is Blamed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4091,\n        \"samples\": [\n          \"Roshan asks for Bhide's help to look for Sodhi. Then Popatlal, Iyer and Bhide go to Sodhi's party to check on him. However, when they reach there, they find that he and his friends have completely passed out. What could've happened? Find out in this episode.\",\n          \"Bhide is excited about his swing, he chooses to put it in his balcony. Looking at this, Champaklal, Jethalal, and Daya miss their good old days and share stories. Bhide faces trouble in getting the swing fixed. This gets him worked up. Watch this episode of Taarak Mehta Ka Oolta Chasma to see what happens next.\",\n          \"Bhide calls a meeting to communicate his concern about the arrangements for Ganesh Chaturthi since Tapu Sena isn't available this time. All the ladies take the responsibility for making the arrangements. Will they be able to live up to the standards set by Tapu Sena?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Episode_runtime\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.458724963742503,\n        \"min\": 14.0,\n        \"max\": 140.0,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          29.0,\n          23.0,\n          40.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Released_on\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2008-07-28 00:00:00\",\n        \"max\": \"2024-06-01 00:00:00\",\n        \"num_unique_values\": 2544,\n        \"samples\": [\n          \"2017-12-21 00:00:00\",\n          \"2023-04-25 00:00:00\",\n          \"2022-03-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["Tmkoc.describe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"JiDoF_NDRn6K","executionInfo":{"status":"ok","timestamp":1727453910128,"user_tz":-330,"elapsed":559,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"8e61f297-78a1-48d4-c887-4644fd4c20e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.describe of       Unnamed: 0  episode_number  \\\n","0              0               1   \n","1              1               2   \n","2              2               3   \n","3              3               4   \n","4              4               5   \n","...          ...             ...   \n","4090        4090            4096   \n","4091        4091            4097   \n","4092        4092            4098   \n","4093        4093            4099   \n","4094        4094            4100   \n","\n","                                          Episode_title  \\\n","0     Taarak Mehta Introduces Himself And Society Me...   \n","1      Jethalal's Son Tapu Decides To Spend His Holiday   \n","2                   Tapu Has Been The Worry Of Jethalal   \n","3                 Daya Approaches Taarak Mehta For Help   \n","4                              Jethalal In Huge Trouble   \n","...                                                 ...   \n","4090                                  Mission Paar Paar   \n","4091                             Ganda Paani Ka Istamal   \n","4092                         Kumura Aur Chana Fass Gaye   \n","4093                                    Anjali Ka Juice   \n","4094                                      Abdul Ki Duty   \n","\n","                                            description  Episode_runtime  \\\n","0     Taarak Mehta introduces himself and the societ...             21.0   \n","1     Jethalal's son Tapu decides to spend his holid...             18.0   \n","2     More than the society members, Tapu has been t...             19.0   \n","3     Tapu lands Jethalal Gada into yet another trou...             18.0   \n","4     Tapu has decided to take full revenge from his...             18.0   \n","...                                                 ...              ...   \n","4090  Tapu Sena reviews the plan with everyone to av...             21.0   \n","4091  Kurmura Kumar and Chana Kumar work at the butt...             21.0   \n","4092  Two men drink buttermilk from the stall and fa...             21.0   \n","4093  Taarak urgently calls everyone over, announcin...             22.0   \n","4094  Abdul is busy running errands for the Gokuldha...             20.0   \n","\n","     Released_on  \n","0     2008-07-28  \n","1     2008-07-29  \n","2     2008-07-30  \n","3     2008-07-31  \n","4     2008-08-01  \n","...          ...  \n","4090  2024-05-28  \n","4091  2024-05-29  \n","4092  2024-05-30  \n","4093  2024-05-31  \n","4094  2024-06-01  \n","\n","[4095 rows x 6 columns]>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.generic.NDFrame.describe</b><br/>def describe(percentiles=None, include=None, exclude=None) -&gt; Self</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py</a>Generate descriptive statistics.\n","\n","Descriptive statistics include those that summarize the central\n","tendency, dispersion and shape of a\n","dataset&#x27;s distribution, excluding ``NaN`` values.\n","\n","Analyzes both numeric and object series, as well\n","as ``DataFrame`` column sets of mixed data types. The output\n","will vary depending on what is provided. Refer to the notes\n","below for more detail.\n","\n","Parameters\n","----------\n","percentiles : list-like of numbers, optional\n","    The percentiles to include in the output. All should\n","    fall between 0 and 1. The default is\n","    ``[.25, .5, .75]``, which returns the 25th, 50th, and\n","    75th percentiles.\n","include : &#x27;all&#x27;, list-like of dtypes or None (default), optional\n","    A white list of data types to include in the result. Ignored\n","    for ``Series``. Here are the options:\n","\n","    - &#x27;all&#x27; : All columns of the input will be included in the output.\n","    - A list-like of dtypes : Limits the results to the\n","      provided data types.\n","      To limit the result to numeric types submit\n","      ``numpy.number``. To limit it instead to object columns submit\n","      the ``numpy.object`` data type. Strings\n","      can also be used in the style of\n","      ``select_dtypes`` (e.g. ``df.describe(include=[&#x27;O&#x27;])``). To\n","      select pandas categorical columns, use ``&#x27;category&#x27;``\n","    - None (default) : The result will include all numeric columns.\n","exclude : list-like of dtypes or None (default), optional,\n","    A black list of data types to omit from the result. Ignored\n","    for ``Series``. Here are the options:\n","\n","    - A list-like of dtypes : Excludes the provided data types\n","      from the result. To exclude numeric types submit\n","      ``numpy.number``. To exclude object columns submit the data\n","      type ``numpy.object``. Strings can also be used in the style of\n","      ``select_dtypes`` (e.g. ``df.describe(exclude=[&#x27;O&#x27;])``). To\n","      exclude pandas categorical columns, use ``&#x27;category&#x27;``\n","    - None (default) : The result will exclude nothing.\n","\n","Returns\n","-------\n","Series or DataFrame\n","    Summary statistics of the Series or Dataframe provided.\n","\n","See Also\n","--------\n","DataFrame.count: Count number of non-NA/null observations.\n","DataFrame.max: Maximum of the values in the object.\n","DataFrame.min: Minimum of the values in the object.\n","DataFrame.mean: Mean of the values.\n","DataFrame.std: Standard deviation of the observations.\n","DataFrame.select_dtypes: Subset of a DataFrame including/excluding\n","    columns based on their dtype.\n","\n","Notes\n","-----\n","For numeric data, the result&#x27;s index will include ``count``,\n","``mean``, ``std``, ``min``, ``max`` as well as lower, ``50`` and\n","upper percentiles. By default the lower percentile is ``25`` and the\n","upper percentile is ``75``. The ``50`` percentile is the\n","same as the median.\n","\n","For object data (e.g. strings or timestamps), the result&#x27;s index\n","will include ``count``, ``unique``, ``top``, and ``freq``. The ``top``\n","is the most common value. The ``freq`` is the most common value&#x27;s\n","frequency. Timestamps also include the ``first`` and ``last`` items.\n","\n","If multiple object values have the highest count, then the\n","``count`` and ``top`` results will be arbitrarily chosen from\n","among those with the highest count.\n","\n","For mixed data types provided via a ``DataFrame``, the default is to\n","return only an analysis of numeric columns. If the dataframe consists\n","only of object and categorical data without any numeric columns, the\n","default is to return an analysis of both the object and categorical\n","columns. If ``include=&#x27;all&#x27;`` is provided as an option, the result\n","will include a union of attributes of each type.\n","\n","The `include` and `exclude` parameters can be used to limit\n","which columns in a ``DataFrame`` are analyzed for the output.\n","The parameters are ignored when analyzing a ``Series``.\n","\n","Examples\n","--------\n","Describing a numeric ``Series``.\n","\n","&gt;&gt;&gt; s = pd.Series([1, 2, 3])\n","&gt;&gt;&gt; s.describe()\n","count    3.0\n","mean     2.0\n","std      1.0\n","min      1.0\n","25%      1.5\n","50%      2.0\n","75%      2.5\n","max      3.0\n","dtype: float64\n","\n","Describing a categorical ``Series``.\n","\n","&gt;&gt;&gt; s = pd.Series([&#x27;a&#x27;, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; s.describe()\n","count     4\n","unique    3\n","top       a\n","freq      2\n","dtype: object\n","\n","Describing a timestamp ``Series``.\n","\n","&gt;&gt;&gt; s = pd.Series([\n","...     np.datetime64(&quot;2000-01-01&quot;),\n","...     np.datetime64(&quot;2010-01-01&quot;),\n","...     np.datetime64(&quot;2010-01-01&quot;)\n","... ])\n","&gt;&gt;&gt; s.describe()\n","count                      3\n","mean     2006-09-01 08:00:00\n","min      2000-01-01 00:00:00\n","25%      2004-12-31 12:00:00\n","50%      2010-01-01 00:00:00\n","75%      2010-01-01 00:00:00\n","max      2010-01-01 00:00:00\n","dtype: object\n","\n","Describing a ``DataFrame``. By default only numeric fields\n","are returned.\n","\n","&gt;&gt;&gt; df = pd.DataFrame({&#x27;categorical&#x27;: pd.Categorical([&#x27;d&#x27;,&#x27;e&#x27;,&#x27;f&#x27;]),\n","...                    &#x27;numeric&#x27;: [1, 2, 3],\n","...                    &#x27;object&#x27;: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]\n","...                   })\n","&gt;&gt;&gt; df.describe()\n","       numeric\n","count      3.0\n","mean       2.0\n","std        1.0\n","min        1.0\n","25%        1.5\n","50%        2.0\n","75%        2.5\n","max        3.0\n","\n","Describing all columns of a ``DataFrame`` regardless of data type.\n","\n","&gt;&gt;&gt; df.describe(include=&#x27;all&#x27;)  # doctest: +SKIP\n","       categorical  numeric object\n","count            3      3.0      3\n","unique           3      NaN      3\n","top              f      NaN      a\n","freq             1      NaN      1\n","mean           NaN      2.0    NaN\n","std            NaN      1.0    NaN\n","min            NaN      1.0    NaN\n","25%            NaN      1.5    NaN\n","50%            NaN      2.0    NaN\n","75%            NaN      2.5    NaN\n","max            NaN      3.0    NaN\n","\n","Describing a column from a ``DataFrame`` by accessing it as\n","an attribute.\n","\n","&gt;&gt;&gt; df.numeric.describe()\n","count    3.0\n","mean     2.0\n","std      1.0\n","min      1.0\n","25%      1.5\n","50%      2.0\n","75%      2.5\n","max      3.0\n","Name: numeric, dtype: float64\n","\n","Including only numeric columns in a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(include=[np.number])\n","       numeric\n","count      3.0\n","mean       2.0\n","std        1.0\n","min        1.0\n","25%        1.5\n","50%        2.0\n","75%        2.5\n","max        3.0\n","\n","Including only string columns in a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(include=[object])  # doctest: +SKIP\n","       object\n","count       3\n","unique      3\n","top         a\n","freq        1\n","\n","Including only categorical columns from a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(include=[&#x27;category&#x27;])\n","       categorical\n","count            3\n","unique           3\n","top              d\n","freq             1\n","\n","Excluding numeric columns from a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(exclude=[np.number])  # doctest: +SKIP\n","       categorical object\n","count            3      3\n","unique           3      3\n","top              f      a\n","freq             1      1\n","\n","Excluding object columns from a ``DataFrame`` description.\n","\n","&gt;&gt;&gt; df.describe(exclude=[object])  # doctest: +SKIP\n","       categorical  numeric\n","count            3      3.0\n","unique           3      NaN\n","top              f      NaN\n","freq             1      NaN\n","mean           NaN      2.0\n","std            NaN      1.0\n","min            NaN      1.0\n","25%            NaN      1.5\n","50%            NaN      2.0\n","75%            NaN      2.5\n","max            NaN      3.0</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 11310);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["plt.figure(figsize=(10,6))\n","plt.title('Distribution of Episode Runtime')\n","plt.xlabel('Episode Runtime(minutes)')\n","plt.ylabel('Frequency')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"aGv0i254RxGr","executionInfo":{"status":"ok","timestamp":1727454606780,"user_tz":-330,"elapsed":1028,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"4d4e6bc0-c390-4e06-f48c-e6b60efbbefc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Tmkoc['Release_Year'] = Tmkoc['Released_on'].dt.year\n","plt.figure(figsize=(10,6))\n","plt.title('Number of Episodes Released Each Year')\n","plt.xlabel('Year')\n","plt.ylabel('Number of Episodes')\n","plt.xticks(rotation=45)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":576},"id":"7ZD2KbzUTHgd","executionInfo":{"status":"ok","timestamp":1727454976593,"user_tz":-330,"elapsed":520,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"88ee8845-0dd0-487b-9b0e-8d523f4af444"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["numeric_Tmkoc = Tmkoc.select_dtypes(include=[np.number])\n","corr_matrix = numeric_Tmkoc.corr()\n","plt.figure(figsize=(8,6))\n","\n","plt.title('Correlation Heatmap')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"PZ52BcEAV1zG","executionInfo":{"status":"ok","timestamp":1727455266101,"user_tz":-330,"elapsed":532,"user":{"displayName":"Priyanka Dakkata","userId":"02531916807305108102"}},"outputId":"0880eff2-d294-4c33-e74f-017b0e972fcc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}